version: '3.8'

# Create a custom network for bridging the containers
networks:
  etl_network: null

# Create the services, i.e., the containers with their specific services inside
services:
  postgres:
    image: postgres:16 # The postgres service is using the "postgres:16" (check in cmd: docker ps)
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
    - ./.env
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data # this volume specifies the postgres storage path
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # automatically create schemas/tables in the database mounting as a volume inside the docker entrypoint folder
    networks:
      - etl_network

  python:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    image: python # The python service is using a custom image named "python" (check in cmd: docker ps)
    container_name: python
    volumes:
      - .:/workspace    
    depends_on:
      - postgres
    stdin_open: true
    tty: true
    command: sleep infinity
    networks:
      - etl_network
    #network_mode: service:postgres

  # pgadmin:
  #     image: dpage/pgadmin4
  #     restart: unless-stopped
  #     environment:
  #       PGADMIN_DEFAULT_EMAIL: "admin@example.com"  # Change this to your desired email address
  #       PGADMIN_DEFAULT_PASSWORD: "admin"   # Change this to your desired password
  #     ports:
  #       - "8080:80"  # Expose port 8080 on the host machine to access pgAdmin
  #     depends_on:
  #       - postgres

volumes:
  pgdata:
